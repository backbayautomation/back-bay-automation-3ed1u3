# AI-powered Product Catalog Search System - Alembic Configuration
# Version: 1.0.0

[alembic]
# Enhanced path to migration scripts with multi-tenant support
script_location = migrations

# Template used to generate migration files with timestamp and descriptive slug
# Format: YYYY_MM_DD_HHMM-revision_description
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Set timezone to UTC for consistent timestamps
timezone = UTC

# Maximum length for migration file slugs
truncate_slug_length = 40

# Enable access to revision environment during migrations
revision_environment = true

# Disable sourceless migrations for better traceability
sourceless = false

# Multi-tenant version locations configuration
version_locations = %(here)s/versions/%(tenant)s

# Use OS-specific path separator
version_path_separator = os

# Database connection URL with environment variables
sqlalchemy.url = postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Enhanced database connection settings
ssl_mode = verify-full
connect_timeout = 10
pool_size = 5
max_overflow = 10
pool_timeout = 30
pool_recycle = 1800

[loggers]
# Configure loggers with tenant context support
keys = root,sqlalchemy,alembic,tenant

# Set default logging level
level = INFO

# Enable multiple log handlers
handlers = console,file,json

# Configure logger name
qualname = 

# Set JSON formatter for structured logging
formatter = json

# Enable tenant context in logs
tenant_context = true

# Enable performance metrics logging
performance_metrics = true

# Enable audit logging
audit_logging = true

[handlers]
# Configure multiple log handlers
keys = console,file,json

# Console handler settings
console_level = INFO
console_class = logging.StreamHandler

# File handler settings
file_level = DEBUG
file_class = logging.handlers.RotatingFileHandler
file_maxBytes = 10485760
file_backupCount = 5
file_path = /var/log/alembic/migrations.log

# JSON handler settings
json_level = INFO
json_class = pythonjsonlogger.jsonlogger.JsonFormatter

# Set JSON formatter for all handlers
formatter = json

[formatters]
# Configure log formatters
keys = generic,json

# Generic formatter pattern
generic_format = %(levelname)-5.5s [%(name)s] %(message)s

# JSON formatter pattern with tenant context
json_format = %(asctime)s %(levelname)s %(name)s %(tenant)s %(message)s

# Date format for timestamps
datefmt = %Y-%m-%d %H:%M:%S

# Include tenant information in logs
include_tenant = true

# Include trace ID for request tracking
include_trace_id = true

[post_write_hooks]
# Post-migration hooks for validation and cleanup
hooks = black,isort,pylint

black.type = console_scripts
black.entrypoint = black
black.options = -l 88 REVISION_SCRIPT_FILENAME

isort.type = console_scripts
isort.entrypoint = isort
isort.options = --profile black REVISION_SCRIPT_FILENAME

pylint.type = console_scripts
pylint.entrypoint = pylint
pylint.options = --disable=all --enable=F,E,W1,W2,W3,W4,W5 REVISION_SCRIPT_FILENAME