// =============================================================================
// Core Theme Stylesheet
// Implements design system with WCAG 2.1 AA compliance, dark mode,
// and responsive design patterns
// =============================================================================

@import './variables';

// Root Custom Properties
// -----------------------------------------------------------------------------
:root {
  // Animation
  --transition-speed: #{$animation-duration-base};
  --transition-timing: #{$animation-timing-base};
  
  // Focus Management
  --focus-ring-color: #{$focus-ring-color};
  --focus-ring-width: 3px;
  
  // Colors - Light Theme Defaults
  --background-color: #{$background-color};
  --background-secondary: #{$background-secondary};
  --text-primary: #{$text-primary};
  --text-secondary: #{$text-secondary};
  --surface-color: #{$background-color};
  --card-shadow: #{$shadow-md};
}

// Base Styles
// -----------------------------------------------------------------------------
html {
  box-sizing: border-box;
  height: 100%;
  font-size: 100%;
}

*, *::before, *::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  min-height: 100%;
  font-family: $font-family-primary;
  font-size: clamp(#{$font-size-base}, 1vw + 0.5rem, #{$font-size-lg});
  line-height: $line-height-base;
  color: var(--text-primary);
  background-color: var(--background-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: 
    background-color var(--transition-speed) var(--transition-timing),
    color var(--transition-speed) var(--transition-timing);
}

// Fluid Typography Function
// -----------------------------------------------------------------------------
@function generateFluidType($minSize, $maxSize, $minWidth, $maxWidth) {
  $slope: ($maxSize - $minSize) / ($maxWidth - $minWidth);
  $yAxisIntersection: -$minWidth * $slope + $minSize;
  
  @return clamp(
    #{$minSize}px,
    #{$yAxisIntersection}px + #{$slope * 100}vw,
    #{$maxSize}px
  );
}

// Container Query Mixin
// -----------------------------------------------------------------------------
@mixin generateContainerQueries($containerName, $breakpoints) {
  container-type: inline-size;
  container-name: $containerName;
  
  @each $name, $size in $breakpoints {
    @container #{$containerName} (min-width: #{$size}) {
      @content($name, $size);
    }
  }
}

// Accessibility Utilities
// -----------------------------------------------------------------------------
.a11y {
  &-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  &-focus-visible {
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
    outline-offset: 2px;
  }

  &-skip-link {
    position: fixed;
    top: -100px;
    left: 50%;
    transform: translateX(-50%);
    padding: $spacing-sm $spacing-md;
    background: var(--background-color);
    color: var(--text-primary);
    text-decoration: none;
    z-index: $z-index-tooltip;
    
    &:focus {
      top: $spacing-sm;
    }
  }
}

// Layout System
// -----------------------------------------------------------------------------
.layout {
  &-container {
    @include generateContainerQueries(main-content, (
      'mobile': $breakpoint-mobile,
      'tablet': $breakpoint-tablet,
      'desktop': $breakpoint-desktop
    ));
    max-width: $container-max-width;
    margin: 0 auto;
    padding: 0 $container-padding;
  }

  &-grid {
    display: grid;
    grid-template-columns: repeat(var(--cols, #{$grid-columns}), 1fr);
    gap: var(--gap, #{$grid-gutter});
    
    @container main-content (width < #{$breakpoint-tablet}) {
      --cols: 6;
      --gap: #{$grid-gutter / 2};
    }
  }
}

// Enhanced Component Styles
// -----------------------------------------------------------------------------
.components {
  &-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: $spacing-sm $spacing-md;
    border: none;
    border-radius: $border-radius-md;
    background-color: $primary;
    color: white;
    font-family: $font-family-primary;
    font-weight: $font-weight-medium;
    text-decoration: none;
    cursor: pointer;
    transition: all var(--transition-speed) var(--transition-timing);
    
    &:hover {
      background-color: $primary-dark;
    }
    
    &:focus-visible {
      @extend .a11y-focus-visible;
    }
    
    &:disabled {
      background-color: $text-disabled;
      cursor: not-allowed;
    }
  }

  &-card {
    background-color: var(--surface-color);
    border-radius: $border-radius-lg;
    padding: $spacing-md;
    box-shadow: var(--card-shadow);
    transition: box-shadow var(--transition-speed) var(--transition-timing);
    
    &:hover {
      box-shadow: $shadow-lg;
    }
  }
}

// Dark Mode Support
// -----------------------------------------------------------------------------
@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #{$dark-background-color};
    --background-secondary: #{$dark-background-secondary};
    --text-primary: #{$dark-text-primary};
    --text-secondary: #{$dark-text-secondary};
    --surface-color: #{$dark-background-secondary};
    --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  }
  
  .components-button {
    &:disabled {
      background-color: $dark-text-secondary;
    }
  }
}

// High Contrast Mode Support
// -----------------------------------------------------------------------------
@media (forced-colors: active) {
  :root {
    --focus-ring-color: CanvasText;
  }
  
  .components-button {
    border: 1px solid ButtonText;
  }
  
  .components-card {
    border: 1px solid CanvasText;
  }
}

// Responsive Breakpoints
// -----------------------------------------------------------------------------
@media screen and (max-width: $breakpoint-mobile) {
  :root {
    --container-padding: #{$spacing-sm};
  }
  
  body {
    font-size: $font-size-base;
  }
}

@media screen and (min-width: $breakpoint-tablet) {
  :root {
    --container-padding: #{$spacing-md};
  }
}

@media screen and (min-width: $breakpoint-desktop) {
  :root {
    --container-padding: #{$spacing-lg};
  }
}

// Print Styles
// -----------------------------------------------------------------------------
@media print {
  body {
    background: white;
    color: black;
  }
  
  .components-card {
    box-shadow: none;
    border: 1px solid black;
  }
}