// =============================================================================
// Core Theme Stylesheet
// Implements design system with WCAG 2.1 AA compliance and dark mode support
// =============================================================================

@use 'variables' as *;

// Root CSS Variables
// Define global CSS custom properties
:root {
  // Color system
  --primary: #{$primary};
  --primary-light: #{$primary-light};
  --primary-dark: #{$primary-dark};
  --secondary: #{$secondary};
  --error: #{$error};
  --warning: #{$warning};
  --info: #{$info};
  --success: #{$success};
  
  // Theme colors
  --background-color: #{$background-color};
  --background-secondary: #{$background-secondary};
  --text-primary: #{$text-primary};
  --text-secondary: #{$text-secondary};
  
  // Animation
  --transition-speed: #{$animation-duration-base};
  --transition-timing: #{$animation-timing-base};
  
  // Focus management
  --focus-ring-color: #{$focus-ring-color};
  --focus-ring-width: 3px;
}

// Fluid Typography Function
@function generateFluidType($minSize, $maxSize, $minWidth: $breakpoint-mobile, $maxWidth: $breakpoint-desktop) {
  $slope: ($maxSize - $minSize) / ($maxWidth - $minWidth);
  $yAxisIntersection: -$minWidth * $slope + $minSize;
  
  @return clamp(#{$minSize}px, #{$yAxisIntersection}px + #{$slope * 100}vw, #{$maxSize}px);
}

// Container Query Mixin
@mixin generateContainerQueries($containerName, $breakpoints) {
  container-type: inline-size;
  container-name: $containerName;
  
  @each $name, $size in $breakpoints {
    @container #{$containerName} (min-width: #{$size}) {
      @content($name, $size);
    }
  }
}

// Base Styles
body {
  font-family: $font-family-primary;
  font-size: generateFluidType(16, 18);
  line-height: $line-height-base;
  color: var(--text-primary);
  background-color: var(--background-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: background-color var(--transition-speed),
              color var(--transition-speed);
}

// Accessibility Utilities
.a11y {
  // Screen reader only
  &-sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  // Focus visible
  &-focus-visible {
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
    outline-offset: 2px;
    border-radius: $border-radius-sm;
  }

  // Skip link
  &-skip-link {
    position: fixed;
    top: -100px;
    left: 50%;
    transform: translateX(-50%);
    padding: $spacing-sm $spacing-md;
    background-color: var(--background-color);
    z-index: $z-index-tooltip;
    
    &:focus {
      top: $spacing-sm;
    }
  }
}

// Layout System
.layout {
  &-container {
    @include generateContainerQueries('main-content', $breakpoints) using ($name, $size) {
      max-width: $container-max-width;
      margin: 0 auto;
      padding: 0 max(#{$container-padding}, 5%);
      
      @if $name == 'mobile' {
        padding: 0 $spacing-md;
      }
    }
  }

  &-grid {
    display: grid;
    grid-template-columns: repeat(var(--cols, #{$grid-columns}), 1fr);
    gap: var(--gap, #{$grid-gutter});
    
    @container main-content (width < #{$breakpoint-tablet}) {
      --cols: 6;
      --gap: #{$grid-gutter / 2};
    }
  }
}

// Enhanced Component Styles
.components {
  &-button {
    padding: $spacing-sm $spacing-md;
    border-radius: $border-radius-sm;
    font-weight: $font-weight-medium;
    transition: all var(--transition-speed) var(--transition-timing);
    
    &:focus-visible {
      @extend .a11y-focus-visible;
    }
    
    &:disabled {
      color: $text-disabled;
      cursor: not-allowed;
    }
  }

  &-card {
    background-color: var(--background-secondary);
    border-radius: $border-radius-md;
    padding: $spacing-md;
    box-shadow: $shadow-sm;
    transition: box-shadow var(--transition-speed);
    
    &:hover {
      box-shadow: $shadow-md;
    }
  }
}

// Dark Mode Support
@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #{$dark-background-color};
    --background-secondary: #{$dark-background-secondary};
    --text-primary: #{$dark-text-primary};
    --text-secondary: #{$dark-text-secondary};
  }

  .components {
    &-card {
      box-shadow: none;
      border: 1px solid rgba(255, 255, 255, 0.1);
      
      &:hover {
        box-shadow: $shadow-sm;
      }
    }
  }
}

// High Contrast Mode Support
@media (forced-colors: active) {
  :root {
    --focus-ring-color: CanvasText;
  }

  .components {
    &-button {
      border: 1px solid currentColor;
    }
    
    &-card {
      border: 1px solid currentColor;
    }
  }
}

// Print Styles
@media print {
  body {
    background-color: white;
    color: black;
  }

  .components {
    &-card {
      box-shadow: none;
      border: 1px solid black;
    }
  }
}

// Responsive Typography
h1 { font-size: generateFluidType($font-size-xxl, $font-size-xxl * 1.5); }
h2 { font-size: generateFluidType($font-size-xl, $font-size-xl * 1.5); }
h3 { font-size: generateFluidType($font-size-lg, $font-size-lg * 1.5); }
h4 { font-size: generateFluidType($font-size-md, $font-size-md * 1.5); }