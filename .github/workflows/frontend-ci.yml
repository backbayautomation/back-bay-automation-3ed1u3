name: Frontend CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - src/web/**
  pull_request:
    branches:
      - main
      - develop
    paths:
      - src/web/**

env:
  WORKING_DIRECTORY: src/web

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Enforcing build time constraint of <15min
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # v3 - Latest stable version for repository checkout

      - name: Setup Node.js
        uses: actions/setup-node@v3  # v3 - Latest stable version for Node.js setup
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: src/web/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci  # Clean install for CI environment

      - name: Type check
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run typecheck
        env:
          CI: true
          NODE_ENV: test

      - name: Lint check
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint
        env:
          CI: true
          NODE_ENV: test

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test
        env:
          CI: true
          NODE_ENV: test

      - name: Build application
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build
        env:
          CI: true
          NODE_ENV: test

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Enforcing security scan time constraint of <20min
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Run dependency vulnerability scan
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit
        env:
          CI: true
          NODE_ENV: test